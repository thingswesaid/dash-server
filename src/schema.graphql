type Query {
  videos(id: ID, keywords: String): [Video]
  userIp: String
  products(type: String): [Product]
  videoPage(id: ID!): VideoPage
}

type Mutation {
  createUser(email: String!, ip: String!): User
  addUserIp(email: String!, ips: [String]!): User
  createAnonymousIp(ip: String!): AnonymousIp
  addUserToVideo(
    email: String!, 
    ips: [String], 
    videoId: String!, 
    phone: String,
    firstName: String,
    lastName: String,
    paymentId: String
  ): User
}

type User {
  id: ID!
  email: String!
  ips: [String!]
  subscribed: Boolean!
  status: Status!
  videos: [Video]!
}

type Video {
  id: ID! 
  name: String!
  title: String
  link: String!
  preview: String!
  image: String!
  placeholder: String
  amount: Float!
  published: Boolean!
  users: [User]
  start: Int!
  type: String
  familyId: String
}

type AnonymousIp {
  ip: String!
}

type PromoVideo {
  id: ID!
  link: String!
  title: String!
  description: String!
  image: String!
  placeholder: String
  banner: String!
  bannerMobile: String!
}

type Product {
  id: ID!
  link: String!
  name: String!
  description: String!
  image: String!
  placeholder: String!
  type: String!
}

type VideoPage {
  video: Video,
  latestVideos: [Video],
  promoVideo: PromoVideo
}

enum Status {
  ACTIVE
  BLOCKED
}